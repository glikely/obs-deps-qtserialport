name: build_deps

on:
  push:
    branches:
      - master
    tags:
      - '20[2-9][0-9]-[0-9][0-9]-[0-9][0-9]-serial'
  pull_request:
    paths-ignore:
      - '**.md'
    branches:
      - master

jobs:
  macos-qt6-build:
    name: 'Build macOS Qt6'
    runs-on: macos-12
    env:
      CACHE_REVISION: '1'
    defaults:
      run:
        shell: zsh {0}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Environment
        id: setup
        run: |
          to_remove=()

          for formula (llvm gcc) {
            if [[ -d /usr/local/opt/"${formula}" ]] to_remove+=(${formula})
          }

          if (( #to_remove )) brew uninstall --ignore-dependencies ${to_remove}

          target='macos-universal'
          artifact_name="qt6-${target}-${{ github.sha }}"
          file_name="${target%%-*}-deps-qt6-$(date +"%Y-%m-%d")-${target##*-}.tar.xz"

          echo "::set-output name=artifactName::${artifact_name}"
          echo "::set-output name=artifactFileName::${file_name}"
          echo "::set-output name=ccacheDate::$(date +"%Y-%m-%d")"

      - name: Restore Compilation Cache
        id: ccache-cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.ccache
          key: macos-universal-ccache-qt6-${{ steps.setup.outputs.ccacheDate }}
          restore-keys: |
            macos-universal-ccache-qt6-

      - name: Check for GitHub Labels
        id: seekingTesters
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [[ -n "$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s "${{ github.event.pull_request.url }}" | jq -e '.labels[] | select(.name == "Seeking Testers")')" ]]; then
            echo "::set-output name=found::true"
          else
            echo "::set-output name=found::false"
          fi

      - name: Build macOS Qt6
        uses: ./.github/actions/build-macos-qt
        with:
          target: macos-universal
          config: Release
          qtVersion: 6
          cacheRevision: ${{ env.CACHE_REVISION }}

      - name: Publish Build Artifacts
        if: ${{ success() && (github.event_name != 'pull_request' || steps.seekingTesters.outputs.found == 'true') }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.setup.outputs.artifactName }}
          path: ${{ github.workspace }}/macos-universal/${{ steps.setup.outputs.artifactFileName }}

  macos-qt6-package:
    name: 'Build macOS Qt6 (${{ matrix.target }})'
    runs-on: macos-12
    strategy:
      fail-fast: true
      matrix:
        target: [macos-arm64, macos-x86_64]
        include:
          - target: macos-x86_64
            config: 'Release'
          - target: macos-arm64
            config: 'Release'
    needs: [macos-qt6-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check for GitHub Labels
        id: seekingTesters
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          if [[ -n "$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -s "${{ github.event.pull_request.url }}" | jq -e '.labels[] | select(.name == "Seeking Testers")')" ]]; then
            echo "::set-output name=found::true"
          else
            echo "::set-output name=found::false"
          fi

      - name: Create single architecture binary package
        if: ${{ success() && (github.event_name != 'pull_request' || steps.seekingTesters.outputs.found == 'true') }}
        uses: ./.github/actions/create-single-arch
        with:
          base: 'qt6-macos-universal-${{ github.sha }}'
          target: '${{ matrix.target }}'
          outputName: 'qt6-${{ matrix.target }}-${{ github.sha }}'

  windows-qt-build:
    name: 'Build Windows Qt'
    runs-on: windows-2022
    strategy:
      fail-fast: true
      matrix:
        qtVersion: [6]
        target: [x64]
        config: ['RelWithDebInfo', 'Debug']
    env:
      CACHE_REVISION: '02'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Environment
        id: setup
        run: |
          $ArtifactName="qt${{ matrix.qtVersion }}-windows-${{ matrix.target }}-${{ matrix.config }}-${{ github.sha }}"
          $FileName="windows-deps-qt${{ matrix.qtVersion }}-$(Get-Date -Format 'yyyy-MM-dd')-${{ matrix.target }}-${{ matrix.config }}.zip"

          Write-Output "::set-output name=artifactName::${ArtifactName}"
          Write-Output "::set-output name=artifactFileName::${FileName}"

      - name: 'Check for GitHub Labels'
        id: seekingTesters
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          $LabelFound = try {
            $Params = @{
              Authentication = 'Bearer'
              Token = (ConvertTo-SecureString '${{ secrets.GITHUB_TOKEN }}' -AsPlainText)
              Uri = '${{ github.event.pull_request.url }}'
              UseBasicParsing = $true
            }

            (Invoke-RestMethod @Params).labels.name.contains("Seeking Testers")
          } catch {
            $false
          }

          Write-Output "::set-output name=found::$(([string]${LabelFound}).ToLower())"

      - name: 'Build Windows Qt'
        uses: ./.github/actions/build-windows-qt
        with:
          target: ${{ matrix.target }}
          config: ${{ matrix.config }}
          qtVersion: ${{ matrix.qtVersion }}
          cacheRevision: ${{ env.CACHE_REVISION }}

      - name: 'Publish Build Artifacts'
        if: ${{ success() && (github.event_name != 'pull_request' || steps.seekingTesters.outputs.found == 'true') }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.setup.outputs.artifactName }}
          path: ${{ github.workspace }}/windows/${{ steps.setup.outputs.artifactFileName }}

  windows-qt-package:
    name: 'Package Windows Qt (${{ matrix.qtVersion }}, ${{ matrix.target }})'
    runs-on: windows-2022
    strategy:
      fail-fast: true
      matrix:
        qtVersion: [6]
        target: [x64]
    needs: [windows-qt-build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 'Check for GitHub Labels'
        id: seekingTesters
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          $LabelFound = try {
            $Params = @{
              Authentication = 'Bearer'
              Token = (ConvertTo-SecureString '${{ secrets.GITHUB_TOKEN }}' -AsPlainText)
              Uri = '${{ github.event.pull_request.url }}'
              UseBasicParsing = $true
            }

            (Invoke-RestMethod @Params).labels.name.contains("Seeking Testers")
          } catch {
            $false
          }

          Write-Output "::set-output name=found::$(([string]${LabelFound}).ToLower())"

      - name: Create Windows Qt package
        if: ${{ success() && (github.event_name != 'pull_request' || steps.seekingTesters.outputs.found == 'true') }}
        uses: ./.github/actions/package-windows-qt
        with:
          base: 'qt${{ matrix.qtVersion }}-windows-${{ matrix.target }}'
          outputName: 'qt${{ matrix.qtVersion }}-windows-${{ matrix.target }}-${{ github.sha }}'

  make-release:
    name: 'Create and upload release'
    runs-on: ubuntu-20.04
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs: [macos-qt6-package, windows-qt-package]
    defaults:
      run:
        shell: bash
    steps:
      - name: Get Metadata
        id: metadata
        run: |
          echo "::set-output name=version::${GITHUB_REF/refs\/tags\//}"
          echo "::set-output name=date::$(date +"%Y-%m-%d")"

      - name: 'Download build artifacts'
        uses: actions/download-artifact@v3

      - name: 'Package Windows dependencies'
        run: |
          shopt -s extglob

          for arch in x64; do
            _temp=$(mktemp -d)
            pushd "${_temp}" > /dev/null

            for artifact in ${{ github.workspace }}/**/windows-@(deps|ffmpeg)-!(qt5*|qt6*)-${arch}.*; do
              case ${artifact} in
                *.zip) unzip ${artifact} > /dev/null ;;
                *.tar.xz) XZ_OPT=-T0 tar -xJf ${artifact} ;;
                *.tar.gz) tar -xzf ${artifact} ;;
              esac
            done

            mv ${{ github.workspace }}/qt6-windows-${arch}-!(RelWithDebInfo*|Debug*)/*.zip ${{ github.workspace }}

            popd > /dev/null
          done

      - name: 'Package macOS dependencies'
        run: |
          shopt -s extglob

          mv ${{ github.workspace }}/qt6-macos-*/*.tar.xz ${{ github.workspace }}

      - name: 'Generate Checksums'
        run: |
          shopt -s extglob
          echo "### Checksums" > ${{ github.workspace }}/CHECKSUMS.txt
          for file in ${{ github.workspace }}/@(*.tar.xz|*.zip); do
            echo "    ${file##*/}: $(sha256sum "${file}" | cut -d " " -f 1)" >> ${{ github.workspace }}/CHECKSUMS.txt
          done

      - name: 'Create Release'
        id: create_release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        with:
          draft: false
          prerelease: false
          tag_name: ${{ steps.metadata.outputs.version }}
          name: "OBS Deps Build ${{ steps.metadata.outputs.version }}"
          body_path: ${{ github.workspace }}/CHECKSUMS.txt
          files: |
            ${{ github.workspace }}/windows-*-x64*.zip
            ${{ github.workspace }}/macos-*-arm64.tar.xz
            ${{ github.workspace }}/macos-*-x86_64.tar.xz
            ${{ github.workspace }}/macos-*-universal.tar.xz
